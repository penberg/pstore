#!/usr/bin/env python

import getopt
import os.path
import random
import sys

def parse_byte_size(s):
    result = -1
    number = float(s[0:len(s)-1])
    suffix = s[len(s)-1:len(s)]
    if suffix == "K":
        result = int(1024 * number)
    if suffix == "M":
        result = int(1024 * 1024 * number)
    if suffix == "G":
        result = int(1024 * 1024 * 1024 * number)
    return result

def usage():
    print "\n  Usage:"
    print "    %s [-s size] [-t] output" % sys.argv[0]
    print "\n  Examples:"
    print "    %s dataset.csv" % sys.argv[0]
    print "    %s -s 128M dataset.csv" % sys.argv[0]
    print "    %s -s 1.5G dataset.tsv" % sys.argv[0]
    print
    sys.exit(1)

try:
    opts, args = getopt.getopt(sys.argv[1:], "s:")
except:
    usage()

file_size = 128 * 1024 * 1024 # 128 MB
separators = {
    '.csv': ',',
    '.tsv': '\t',
}

for o, a in opts:
    if o == "-s":
        file_size = parse_byte_size(a)
    else:
        usage()

if file_size < 0:
    usage()

if len(args) != 1:
  usage()

filename  = args[0]
_, ext    = os.path.splitext(filename)
separator = separators.get(ext, ',')

symbol    = "AAPL"
last      = 100.0
timestamp = 34200000
length    = 0

outfile = open(filename, 'w')

line = separator.join(("Symbol", "Timestamp", "Last")) + "\n"
length += len(line)
outfile.write(line)

while length < file_size:
    last      += random.uniform(-1.0, 1.0)
    timestamp += random.randint(500, 2000)

    line = separator.join((symbol, str(timestamp), "%.2f" % last)) + "\n"
    length += len(line)
    outfile.write(line)
